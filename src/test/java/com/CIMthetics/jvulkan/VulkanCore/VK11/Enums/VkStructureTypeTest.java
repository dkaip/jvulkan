/*
 * Copyright 2019 Douglas Kaip
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.CIMthetics.jvulkan.VulkanCore.VK11.Enums;

import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.Test;

class VkStructureTypeTest
{
    @Test
    void testNumberOfElements()
    {
        VkStructureType[] values = VkStructureType.values();
        assertEquals(386, values.length, "This enum has the wrong number of entries in it. Did it change without this test being updated?");
    }


    @Test
    void testValues()
    {
        assertEquals(0, VkStructureType.VK_STRUCTURE_TYPE_APPLICATION_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_APPLICATION_INFO.toString() + " has an unexpected value.");
        assertEquals(1, VkStructureType.VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO.toString() + " has an unexpected value.");
        assertEquals(2, VkStructureType.VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO.toString() + " has an unexpected value.");
        assertEquals(3, VkStructureType.VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO.toString() + " has an unexpected value.");
        assertEquals(4, VkStructureType.VK_STRUCTURE_TYPE_SUBMIT_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_SUBMIT_INFO.toString() + " has an unexpected value.");
        assertEquals(5, VkStructureType.VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO.toString() + " has an unexpected value.");
        assertEquals(6, VkStructureType.VK_STRUCTURE_TYPE_MAPPED_MEMORY_RANGE.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_MAPPED_MEMORY_RANGE.toString() + " has an unexpected value.");
        assertEquals(7, VkStructureType.VK_STRUCTURE_TYPE_BIND_SPARSE_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_BIND_SPARSE_INFO.toString() + " has an unexpected value.");
        assertEquals(8, VkStructureType.VK_STRUCTURE_TYPE_FENCE_CREATE_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_FENCE_CREATE_INFO.toString() + " has an unexpected value.");
        assertEquals(9, VkStructureType.VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO.toString() + " has an unexpected value.");
        assertEquals(10, VkStructureType.VK_STRUCTURE_TYPE_EVENT_CREATE_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_EVENT_CREATE_INFO.toString() + " has an unexpected value.");
        assertEquals(11, VkStructureType.VK_STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO.toString() + " has an unexpected value.");
        assertEquals(12, VkStructureType.VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO.toString() + " has an unexpected value.");
        assertEquals(13, VkStructureType.VK_STRUCTURE_TYPE_BUFFER_VIEW_CREATE_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_BUFFER_VIEW_CREATE_INFO.toString() + " has an unexpected value.");
        assertEquals(14, VkStructureType.VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO.toString() + " has an unexpected value.");
        assertEquals(15, VkStructureType.VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO.toString() + " has an unexpected value.");
        assertEquals(16, VkStructureType.VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO.toString() + " has an unexpected value.");
        assertEquals(17, VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_CACHE_CREATE_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_CACHE_CREATE_INFO.toString() + " has an unexpected value.");
        assertEquals(18, VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO.toString() + " has an unexpected value.");
        assertEquals(19, VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO.toString() + " has an unexpected value.");
        assertEquals(20, VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO.toString() + " has an unexpected value.");
        assertEquals(21, VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_STATE_CREATE_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_STATE_CREATE_INFO.toString() + " has an unexpected value.");
        assertEquals(22, VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO.toString() + " has an unexpected value.");
        assertEquals(23, VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO.toString() + " has an unexpected value.");
        assertEquals(24, VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO.toString() + " has an unexpected value.");
        assertEquals(25, VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_DEPTH_STENCIL_STATE_CREATE_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_DEPTH_STENCIL_STATE_CREATE_INFO.toString() + " has an unexpected value.");
        assertEquals(26, VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO.toString() + " has an unexpected value.");
        assertEquals(27, VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_DYNAMIC_STATE_CREATE_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_DYNAMIC_STATE_CREATE_INFO.toString() + " has an unexpected value.");
        assertEquals(28, VkStructureType.VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO.toString() + " has an unexpected value.");
        assertEquals(29, VkStructureType.VK_STRUCTURE_TYPE_COMPUTE_PIPELINE_CREATE_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_COMPUTE_PIPELINE_CREATE_INFO.toString() + " has an unexpected value.");
        assertEquals(30, VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO.toString() + " has an unexpected value.");
        assertEquals(31, VkStructureType.VK_STRUCTURE_TYPE_SAMPLER_CREATE_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_SAMPLER_CREATE_INFO.toString() + " has an unexpected value.");
        assertEquals(32, VkStructureType.VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_CREATE_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_CREATE_INFO.toString() + " has an unexpected value.");
        assertEquals(33, VkStructureType.VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_CREATE_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_CREATE_INFO.toString() + " has an unexpected value.");
        assertEquals(34, VkStructureType.VK_STRUCTURE_TYPE_DESCRIPTOR_SET_ALLOCATE_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_DESCRIPTOR_SET_ALLOCATE_INFO.toString() + " has an unexpected value.");
        assertEquals(35, VkStructureType.VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET.toString() + " has an unexpected value.");
        assertEquals(36, VkStructureType.VK_STRUCTURE_TYPE_COPY_DESCRIPTOR_SET.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_COPY_DESCRIPTOR_SET.toString() + " has an unexpected value.");
        assertEquals(37, VkStructureType.VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO.toString() + " has an unexpected value.");
        assertEquals(38, VkStructureType.VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO.toString() + " has an unexpected value.");
        assertEquals(39, VkStructureType.VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO.toString() + " has an unexpected value.");
        assertEquals(40, VkStructureType.VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO.toString() + " has an unexpected value.");
        assertEquals(41, VkStructureType.VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_INFO.toString() + " has an unexpected value.");
        assertEquals(42, VkStructureType.VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO.toString() + " has an unexpected value.");
        assertEquals(43, VkStructureType.VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO.toString() + " has an unexpected value.");
        assertEquals(44, VkStructureType.VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER.toString() + " has an unexpected value.");
        assertEquals(45, VkStructureType.VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER.toString() + " has an unexpected value.");
        assertEquals(46, VkStructureType.VK_STRUCTURE_TYPE_MEMORY_BARRIER.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_MEMORY_BARRIER.toString() + " has an unexpected value.");
        assertEquals(47, VkStructureType.VK_STRUCTURE_TYPE_LOADER_INSTANCE_CREATE_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_LOADER_INSTANCE_CREATE_INFO.toString() + " has an unexpected value.");
        assertEquals(48, VkStructureType.VK_STRUCTURE_TYPE_LOADER_DEVICE_CREATE_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_LOADER_DEVICE_CREATE_INFO.toString() + " has an unexpected value.");
        assertEquals(1000094000, VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_PROPERTIES.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_PROPERTIES.toString() + " has an unexpected value.");
        assertEquals(1000157000, VkStructureType.VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO.toString() + " has an unexpected value.");
        assertEquals(1000157001, VkStructureType.VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO.toString() + " has an unexpected value.");
        assertEquals(1000083000, VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES.toString() + " has an unexpected value.");
        assertEquals(1000127000, VkStructureType.VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS.toString() + " has an unexpected value.");
        assertEquals(1000127001, VkStructureType.VK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO.toString() + " has an unexpected value.");
        assertEquals(1000060000, VkStructureType.VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO.toString() + " has an unexpected value.");
        assertEquals(1000060003, VkStructureType.VK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO.toString() + " has an unexpected value.");
        assertEquals(1000060004, VkStructureType.VK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO.toString() + " has an unexpected value.");
        assertEquals(1000060005, VkStructureType.VK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO.toString() + " has an unexpected value.");
        assertEquals(1000060006, VkStructureType.VK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO.toString() + " has an unexpected value.");
        assertEquals(1000060013, VkStructureType.VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO.toString() + " has an unexpected value.");
        assertEquals(1000060014, VkStructureType.VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO.toString() + " has an unexpected value.");
        assertEquals(1000070000, VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES.toString() + " has an unexpected value.");
        assertEquals(1000070001, VkStructureType.VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO.toString() + " has an unexpected value.");
        assertEquals(1000146000, VkStructureType.VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2.toString() + " has an unexpected value.");
        assertEquals(1000146001, VkStructureType.VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2.toString() + " has an unexpected value.");
        assertEquals(1000146002, VkStructureType.VK_STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2.toString() + " has an unexpected value.");
        assertEquals(1000146003, VkStructureType.VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2.toString() + " has an unexpected value.");
        assertEquals(1000146004, VkStructureType.VK_STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2.toString() + " has an unexpected value.");
        assertEquals(1000059000, VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2.toString() + " has an unexpected value.");
        assertEquals(1000059001, VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2.toString() + " has an unexpected value.");
        assertEquals(1000059002, VkStructureType.VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2.toString() + " has an unexpected value.");
        assertEquals(1000059003, VkStructureType.VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2.toString() + " has an unexpected value.");
        assertEquals(1000059004, VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2.toString() + " has an unexpected value.");
        assertEquals(1000059005, VkStructureType.VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2.toString() + " has an unexpected value.");
        assertEquals(1000059006, VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2.toString() + " has an unexpected value.");
        assertEquals(1000059007, VkStructureType.VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2.toString() + " has an unexpected value.");
        assertEquals(1000059008, VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2.toString() + " has an unexpected value.");
        assertEquals(1000117000, VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES.toString() + " has an unexpected value.");
        assertEquals(1000117001, VkStructureType.VK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO.toString() + " has an unexpected value.");
        assertEquals(1000117002, VkStructureType.VK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO.toString() + " has an unexpected value.");
        assertEquals(1000117003, VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO.toString() + " has an unexpected value.");
        assertEquals(1000053000, VkStructureType.VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO.toString() + " has an unexpected value.");
        assertEquals(1000053001, VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES.toString() + " has an unexpected value.");
        assertEquals(1000053002, VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES.toString() + " has an unexpected value.");
        assertEquals(1000120000, VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTER_FEATURES.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTER_FEATURES.toString() + " has an unexpected value.");
        assertEquals(1000145000, VkStructureType.VK_STRUCTURE_TYPE_PROTECTED_SUBMIT_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PROTECTED_SUBMIT_INFO.toString() + " has an unexpected value.");
        assertEquals(1000145001, VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_FEATURES.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_FEATURES.toString() + " has an unexpected value.");
        assertEquals(1000145002, VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_PROPERTIES.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_PROPERTIES.toString() + " has an unexpected value.");
        assertEquals(1000145003, VkStructureType.VK_STRUCTURE_TYPE_DEVICE_QUEUE_INFO_2.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_DEVICE_QUEUE_INFO_2.toString() + " has an unexpected value.");
        assertEquals(1000156000, VkStructureType.VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO.toString() + " has an unexpected value.");
        assertEquals(1000156001, VkStructureType.VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO.toString() + " has an unexpected value.");
        assertEquals(1000156002, VkStructureType.VK_STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO.toString() + " has an unexpected value.");
        assertEquals(1000156003, VkStructureType.VK_STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO.toString() + " has an unexpected value.");
        assertEquals(1000156004, VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES.toString() + " has an unexpected value.");
        assertEquals(1000156005, VkStructureType.VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES.toString() + " has an unexpected value.");
        assertEquals(1000085000, VkStructureType.VK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO.toString() + " has an unexpected value.");
        assertEquals(1000071000, VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO.toString() + " has an unexpected value.");
        assertEquals(1000071001, VkStructureType.VK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES.toString() + " has an unexpected value.");
        assertEquals(1000071002, VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO.toString() + " has an unexpected value.");
        assertEquals(1000071003, VkStructureType.VK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES.toString() + " has an unexpected value.");
        assertEquals(1000071004, VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES.toString() + " has an unexpected value.");
        assertEquals(1000072000, VkStructureType.VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO.toString() + " has an unexpected value.");
        assertEquals(1000072001, VkStructureType.VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO.toString() + " has an unexpected value.");
        assertEquals(1000072002, VkStructureType.VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO.toString() + " has an unexpected value.");
        assertEquals(1000112000, VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO.toString() + " has an unexpected value.");
        assertEquals(1000112001, VkStructureType.VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES.toString() + " has an unexpected value.");
        assertEquals(1000113000, VkStructureType.VK_STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO.toString() + " has an unexpected value.");
        assertEquals(1000077000, VkStructureType.VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO.toString() + " has an unexpected value.");
        assertEquals(1000076000, VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO.toString() + " has an unexpected value.");
        assertEquals(1000076001, VkStructureType.VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES.toString() + " has an unexpected value.");
        assertEquals(1000168000, VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES.toString() + " has an unexpected value.");
        assertEquals(1000168001, VkStructureType.VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT.toString() + " has an unexpected value.");
        assertEquals(1000063000, VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETER_FEATURES.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETER_FEATURES.toString() + " has an unexpected value.");
        assertEquals(1000001000, VkStructureType.VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR.toString() + " has an unexpected value.");
        assertEquals(1000001001, VkStructureType.VK_STRUCTURE_TYPE_PRESENT_INFO_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PRESENT_INFO_KHR.toString() + " has an unexpected value.");
        assertEquals(1000060007, VkStructureType.VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_CAPABILITIES_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_CAPABILITIES_KHR.toString() + " has an unexpected value.");
        assertEquals(1000060008, VkStructureType.VK_STRUCTURE_TYPE_IMAGE_SWAPCHAIN_CREATE_INFO_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_IMAGE_SWAPCHAIN_CREATE_INFO_KHR.toString() + " has an unexpected value.");
        assertEquals(1000060009, VkStructureType.VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_SWAPCHAIN_INFO_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_SWAPCHAIN_INFO_KHR.toString() + " has an unexpected value.");
        assertEquals(1000060010, VkStructureType.VK_STRUCTURE_TYPE_ACQUIRE_NEXT_IMAGE_INFO_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_ACQUIRE_NEXT_IMAGE_INFO_KHR.toString() + " has an unexpected value.");
        assertEquals(1000060011, VkStructureType.VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_INFO_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_INFO_KHR.toString() + " has an unexpected value.");
        assertEquals(1000060012, VkStructureType.VK_STRUCTURE_TYPE_DEVICE_GROUP_SWAPCHAIN_CREATE_INFO_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_DEVICE_GROUP_SWAPCHAIN_CREATE_INFO_KHR.toString() + " has an unexpected value.");
        assertEquals(1000002000, VkStructureType.VK_STRUCTURE_TYPE_DISPLAY_MODE_CREATE_INFO_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_DISPLAY_MODE_CREATE_INFO_KHR.toString() + " has an unexpected value.");
        assertEquals(1000002001, VkStructureType.VK_STRUCTURE_TYPE_DISPLAY_SURFACE_CREATE_INFO_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_DISPLAY_SURFACE_CREATE_INFO_KHR.toString() + " has an unexpected value.");
        assertEquals(1000003000, VkStructureType.VK_STRUCTURE_TYPE_DISPLAY_PRESENT_INFO_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_DISPLAY_PRESENT_INFO_KHR.toString() + " has an unexpected value.");
        assertEquals(1000004000, VkStructureType.VK_STRUCTURE_TYPE_XLIB_SURFACE_CREATE_INFO_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_XLIB_SURFACE_CREATE_INFO_KHR.toString() + " has an unexpected value.");
        assertEquals(1000005000, VkStructureType.VK_STRUCTURE_TYPE_XCB_SURFACE_CREATE_INFO_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_XCB_SURFACE_CREATE_INFO_KHR.toString() + " has an unexpected value.");
        assertEquals(1000006000, VkStructureType.VK_STRUCTURE_TYPE_WAYLAND_SURFACE_CREATE_INFO_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_WAYLAND_SURFACE_CREATE_INFO_KHR.toString() + " has an unexpected value.");
        assertEquals(1000008000, VkStructureType.VK_STRUCTURE_TYPE_ANDROID_SURFACE_CREATE_INFO_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_ANDROID_SURFACE_CREATE_INFO_KHR.toString() + " has an unexpected value.");
        assertEquals(1000009000, VkStructureType.VK_STRUCTURE_TYPE_WIN32_SURFACE_CREATE_INFO_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_WIN32_SURFACE_CREATE_INFO_KHR.toString() + " has an unexpected value.");
        assertEquals(1000011000, VkStructureType.VK_STRUCTURE_TYPE_DEBUG_REPORT_CALLBACK_CREATE_INFO_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_DEBUG_REPORT_CALLBACK_CREATE_INFO_EXT.toString() + " has an unexpected value.");
        assertEquals(1000018000, VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_RASTERIZATION_ORDER_AMD.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_RASTERIZATION_ORDER_AMD.toString() + " has an unexpected value.");
        assertEquals(1000022000, VkStructureType.VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_NAME_INFO_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_NAME_INFO_EXT.toString() + " has an unexpected value.");
        assertEquals(1000022001, VkStructureType.VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_TAG_INFO_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_TAG_INFO_EXT.toString() + " has an unexpected value.");
        assertEquals(1000022002, VkStructureType.VK_STRUCTURE_TYPE_DEBUG_MARKER_MARKER_INFO_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_DEBUG_MARKER_MARKER_INFO_EXT.toString() + " has an unexpected value.");
        assertEquals(1000026000, VkStructureType.VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_IMAGE_CREATE_INFO_NV.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_IMAGE_CREATE_INFO_NV.toString() + " has an unexpected value.");
        assertEquals(1000026001, VkStructureType.VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_BUFFER_CREATE_INFO_NV.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_BUFFER_CREATE_INFO_NV.toString() + " has an unexpected value.");
        assertEquals(1000026002, VkStructureType.VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_MEMORY_ALLOCATE_INFO_NV.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_MEMORY_ALLOCATE_INFO_NV.toString() + " has an unexpected value.");
        assertEquals(1000028000, VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_FEATURES_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_FEATURES_EXT.toString() + " has an unexpected value.");
        assertEquals(1000028001, VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_PROPERTIES_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_PROPERTIES_EXT.toString() + " has an unexpected value.");
        assertEquals(1000028002, VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_STREAM_CREATE_INFO_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_STREAM_CREATE_INFO_EXT.toString() + " has an unexpected value.");
        assertEquals(1000041000, VkStructureType.VK_STRUCTURE_TYPE_TEXTURE_LOD_GATHER_FORMAT_PROPERTIES_AMD.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_TEXTURE_LOD_GATHER_FORMAT_PROPERTIES_AMD.toString() + " has an unexpected value.");
        assertEquals(1000050000, VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CORNER_SAMPLED_IMAGE_FEATURES_NV.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CORNER_SAMPLED_IMAGE_FEATURES_NV.toString() + " has an unexpected value.");
        assertEquals(1000056000, VkStructureType.VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO_NV.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO_NV.toString() + " has an unexpected value.");
        assertEquals(1000056001, VkStructureType.VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO_NV.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO_NV.toString() + " has an unexpected value.");
        assertEquals(1000057000, VkStructureType.VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_NV.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_NV.toString() + " has an unexpected value.");
        assertEquals(1000057001, VkStructureType.VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_NV.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_NV.toString() + " has an unexpected value.");
        assertEquals(1000058000, VkStructureType.VK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_NV.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_NV.toString() + " has an unexpected value.");
        assertEquals(1000061000, VkStructureType.VK_STRUCTURE_TYPE_VALIDATION_FLAGS_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_VALIDATION_FLAGS_EXT.toString() + " has an unexpected value.");
        assertEquals(1000062000, VkStructureType.VK_STRUCTURE_TYPE_VI_SURFACE_CREATE_INFO_NN.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_VI_SURFACE_CREATE_INFO_NN.toString() + " has an unexpected value.");
        assertEquals(1000067000, VkStructureType.VK_STRUCTURE_TYPE_IMAGE_VIEW_ASTC_DECODE_MODE_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_IMAGE_VIEW_ASTC_DECODE_MODE_EXT.toString() + " has an unexpected value.");
        assertEquals(1000067001, VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ASTC_DECODE_FEATURES_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ASTC_DECODE_FEATURES_EXT.toString() + " has an unexpected value.");
        assertEquals(1000073000, VkStructureType.VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_KHR.toString() + " has an unexpected value.");
        assertEquals(1000073001, VkStructureType.VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_KHR.toString() + " has an unexpected value.");
        assertEquals(1000073002, VkStructureType.VK_STRUCTURE_TYPE_MEMORY_WIN32_HANDLE_PROPERTIES_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_MEMORY_WIN32_HANDLE_PROPERTIES_KHR.toString() + " has an unexpected value.");
        assertEquals(1000073003, VkStructureType.VK_STRUCTURE_TYPE_MEMORY_GET_WIN32_HANDLE_INFO_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_MEMORY_GET_WIN32_HANDLE_INFO_KHR.toString() + " has an unexpected value.");
        assertEquals(1000074000, VkStructureType.VK_STRUCTURE_TYPE_IMPORT_MEMORY_FD_INFO_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_IMPORT_MEMORY_FD_INFO_KHR.toString() + " has an unexpected value.");
        assertEquals(1000074001, VkStructureType.VK_STRUCTURE_TYPE_MEMORY_FD_PROPERTIES_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_MEMORY_FD_PROPERTIES_KHR.toString() + " has an unexpected value.");
        assertEquals(1000074002, VkStructureType.VK_STRUCTURE_TYPE_MEMORY_GET_FD_INFO_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_MEMORY_GET_FD_INFO_KHR.toString() + " has an unexpected value.");
        assertEquals(1000075000, VkStructureType.VK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_KHR.toString() + " has an unexpected value.");
        assertEquals(1000078000, VkStructureType.VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR.toString() + " has an unexpected value.");
        assertEquals(1000078001, VkStructureType.VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR.toString() + " has an unexpected value.");
        assertEquals(1000078002, VkStructureType.VK_STRUCTURE_TYPE_D3D12_FENCE_SUBMIT_INFO_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_D3D12_FENCE_SUBMIT_INFO_KHR.toString() + " has an unexpected value.");
        assertEquals(1000078003, VkStructureType.VK_STRUCTURE_TYPE_SEMAPHORE_GET_WIN32_HANDLE_INFO_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_SEMAPHORE_GET_WIN32_HANDLE_INFO_KHR.toString() + " has an unexpected value.");
        assertEquals(1000079000, VkStructureType.VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_FD_INFO_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_FD_INFO_KHR.toString() + " has an unexpected value.");
        assertEquals(1000079001, VkStructureType.VK_STRUCTURE_TYPE_SEMAPHORE_GET_FD_INFO_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_SEMAPHORE_GET_FD_INFO_KHR.toString() + " has an unexpected value.");
        assertEquals(1000080000, VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PUSH_DESCRIPTOR_PROPERTIES_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PUSH_DESCRIPTOR_PROPERTIES_KHR.toString() + " has an unexpected value.");
        assertEquals(1000081000, VkStructureType.VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_CONDITIONAL_RENDERING_INFO_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_CONDITIONAL_RENDERING_INFO_EXT.toString() + " has an unexpected value.");
        assertEquals(1000081001, VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONDITIONAL_RENDERING_FEATURES_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONDITIONAL_RENDERING_FEATURES_EXT.toString() + " has an unexpected value.");
        assertEquals(1000081002, VkStructureType.VK_STRUCTURE_TYPE_CONDITIONAL_RENDERING_BEGIN_INFO_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_CONDITIONAL_RENDERING_BEGIN_INFO_EXT.toString() + " has an unexpected value.");
        assertEquals(1000082000, VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT16_INT8_FEATURES_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT16_INT8_FEATURES_KHR.toString() + " has an unexpected value.");
        assertEquals(1000084000, VkStructureType.VK_STRUCTURE_TYPE_PRESENT_REGIONS_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PRESENT_REGIONS_KHR.toString() + " has an unexpected value.");
        assertEquals(1000086000, VkStructureType.VK_STRUCTURE_TYPE_OBJECT_TABLE_CREATE_INFO_NVX.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_OBJECT_TABLE_CREATE_INFO_NVX.toString() + " has an unexpected value.");
        assertEquals(1000086001, VkStructureType.VK_STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_CREATE_INFO_NVX.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_CREATE_INFO_NVX.toString() + " has an unexpected value.");
        assertEquals(1000086002, VkStructureType.VK_STRUCTURE_TYPE_CMD_PROCESS_COMMANDS_INFO_NVX.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_CMD_PROCESS_COMMANDS_INFO_NVX.toString() + " has an unexpected value.");
        assertEquals(1000086003, VkStructureType.VK_STRUCTURE_TYPE_CMD_RESERVE_SPACE_FOR_COMMANDS_INFO_NVX.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_CMD_RESERVE_SPACE_FOR_COMMANDS_INFO_NVX.toString() + " has an unexpected value.");
        assertEquals(1000086004, VkStructureType.VK_STRUCTURE_TYPE_DEVICE_GENERATED_COMMANDS_LIMITS_NVX.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_DEVICE_GENERATED_COMMANDS_LIMITS_NVX.toString() + " has an unexpected value.");
        assertEquals(1000086005, VkStructureType.VK_STRUCTURE_TYPE_DEVICE_GENERATED_COMMANDS_FEATURES_NVX.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_DEVICE_GENERATED_COMMANDS_FEATURES_NVX.toString() + " has an unexpected value.");
        assertEquals(1000087000, VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_W_SCALING_STATE_CREATE_INFO_NV.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_W_SCALING_STATE_CREATE_INFO_NV.toString() + " has an unexpected value.");
        assertEquals(1000090000, VkStructureType.VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_EXT.toString() + " has an unexpected value.");
        assertEquals(1000091000, VkStructureType.VK_STRUCTURE_TYPE_DISPLAY_POWER_INFO_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_DISPLAY_POWER_INFO_EXT.toString() + " has an unexpected value.");
        assertEquals(1000091001, VkStructureType.VK_STRUCTURE_TYPE_DEVICE_EVENT_INFO_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_DEVICE_EVENT_INFO_EXT.toString() + " has an unexpected value.");
        assertEquals(1000091002, VkStructureType.VK_STRUCTURE_TYPE_DISPLAY_EVENT_INFO_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_DISPLAY_EVENT_INFO_EXT.toString() + " has an unexpected value.");
        assertEquals(1000091003, VkStructureType.VK_STRUCTURE_TYPE_SWAPCHAIN_COUNTER_CREATE_INFO_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_SWAPCHAIN_COUNTER_CREATE_INFO_EXT.toString() + " has an unexpected value.");
        assertEquals(1000092000, VkStructureType.VK_STRUCTURE_TYPE_PRESENT_TIMES_INFO_GOOGLE.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PRESENT_TIMES_INFO_GOOGLE.toString() + " has an unexpected value.");
        assertEquals(1000097000, VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_ATTRIBUTES_PROPERTIES_NVX.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_ATTRIBUTES_PROPERTIES_NVX.toString() + " has an unexpected value.");
        assertEquals(1000098000, VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SWIZZLE_STATE_CREATE_INFO_NV.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SWIZZLE_STATE_CREATE_INFO_NV.toString() + " has an unexpected value.");
        assertEquals(1000099000, VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DISCARD_RECTANGLE_PROPERTIES_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DISCARD_RECTANGLE_PROPERTIES_EXT.toString() + " has an unexpected value.");
        assertEquals(1000099001, VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_DISCARD_RECTANGLE_STATE_CREATE_INFO_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_DISCARD_RECTANGLE_STATE_CREATE_INFO_EXT.toString() + " has an unexpected value.");
        assertEquals(1000101000, VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONSERVATIVE_RASTERIZATION_PROPERTIES_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONSERVATIVE_RASTERIZATION_PROPERTIES_EXT.toString() + " has an unexpected value.");
        assertEquals(1000101001, VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_CONSERVATIVE_STATE_CREATE_INFO_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_CONSERVATIVE_STATE_CREATE_INFO_EXT.toString() + " has an unexpected value.");
        assertEquals(1000102000, VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLIP_ENABLE_FEATURES_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLIP_ENABLE_FEATURES_EXT.toString() + " has an unexpected value.");
        assertEquals(1000102001, VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_DEPTH_CLIP_STATE_CREATE_INFO_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_DEPTH_CLIP_STATE_CREATE_INFO_EXT.toString() + " has an unexpected value.");
        assertEquals(1000105000, VkStructureType.VK_STRUCTURE_TYPE_HDR_METADATA_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_HDR_METADATA_EXT.toString() + " has an unexpected value.");
        assertEquals(1000109000, VkStructureType.VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_2_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_2_KHR.toString() + " has an unexpected value.");
        assertEquals(1000109001, VkStructureType.VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_2_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_2_KHR.toString() + " has an unexpected value.");
        assertEquals( 1000109002, VkStructureType.VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_2_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_2_KHR.toString() + " has an unexpected value.");
        assertEquals( 1000109003, VkStructureType.VK_STRUCTURE_TYPE_SUBPASS_DEPENDENCY_2_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_SUBPASS_DEPENDENCY_2_KHR.toString() + " has an unexpected value.");
        assertEquals(1000109004, VkStructureType.VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO_2_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO_2_KHR.toString() + " has an unexpected value.");
        assertEquals(1000109005, VkStructureType.VK_STRUCTURE_TYPE_SUBPASS_BEGIN_INFO_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_SUBPASS_BEGIN_INFO_KHR.toString() + " has an unexpected value.");
        assertEquals(1000109006, VkStructureType.VK_STRUCTURE_TYPE_SUBPASS_END_INFO_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_SUBPASS_END_INFO_KHR.toString() + " has an unexpected value.");
        assertEquals(1000111000, VkStructureType.VK_STRUCTURE_TYPE_SHARED_PRESENT_SURFACE_CAPABILITIES_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_SHARED_PRESENT_SURFACE_CAPABILITIES_KHR.toString() + " has an unexpected value.");
        assertEquals(1000114000, VkStructureType.VK_STRUCTURE_TYPE_IMPORT_FENCE_WIN32_HANDLE_INFO_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_IMPORT_FENCE_WIN32_HANDLE_INFO_KHR.toString() + " has an unexpected value.");
        assertEquals(1000114001, VkStructureType.VK_STRUCTURE_TYPE_EXPORT_FENCE_WIN32_HANDLE_INFO_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_EXPORT_FENCE_WIN32_HANDLE_INFO_KHR.toString() + " has an unexpected value.");
        assertEquals(1000114002, VkStructureType.VK_STRUCTURE_TYPE_FENCE_GET_WIN32_HANDLE_INFO_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_FENCE_GET_WIN32_HANDLE_INFO_KHR.toString() + " has an unexpected value.");
        assertEquals(1000115000, VkStructureType.VK_STRUCTURE_TYPE_IMPORT_FENCE_FD_INFO_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_IMPORT_FENCE_FD_INFO_KHR.toString() + " has an unexpected value.");
        assertEquals(1000115001, VkStructureType.VK_STRUCTURE_TYPE_FENCE_GET_FD_INFO_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_FENCE_GET_FD_INFO_KHR.toString() + " has an unexpected value.");
        assertEquals(1000119000, VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SURFACE_INFO_2_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SURFACE_INFO_2_KHR.toString() + " has an unexpected value.");
        assertEquals(1000119001, VkStructureType.VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_KHR.toString() + " has an unexpected value.");
        assertEquals(1000119002, VkStructureType.VK_STRUCTURE_TYPE_SURFACE_FORMAT_2_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_SURFACE_FORMAT_2_KHR.toString() + " has an unexpected value.");
        assertEquals(1000121000, VkStructureType.VK_STRUCTURE_TYPE_DISPLAY_PROPERTIES_2_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_DISPLAY_PROPERTIES_2_KHR.toString() + " has an unexpected value.");
        assertEquals(1000121001, VkStructureType.VK_STRUCTURE_TYPE_DISPLAY_PLANE_PROPERTIES_2_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_DISPLAY_PLANE_PROPERTIES_2_KHR.toString() + " has an unexpected value.");
        assertEquals(1000121002, VkStructureType.VK_STRUCTURE_TYPE_DISPLAY_MODE_PROPERTIES_2_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_DISPLAY_MODE_PROPERTIES_2_KHR.toString() + " has an unexpected value.");
        assertEquals(1000121003, VkStructureType.VK_STRUCTURE_TYPE_DISPLAY_PLANE_INFO_2_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_DISPLAY_PLANE_INFO_2_KHR.toString() + " has an unexpected value.");
        assertEquals(1000121004, VkStructureType.VK_STRUCTURE_TYPE_DISPLAY_PLANE_CAPABILITIES_2_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_DISPLAY_PLANE_CAPABILITIES_2_KHR.toString() + " has an unexpected value.");
        assertEquals(1000122000, VkStructureType.VK_STRUCTURE_TYPE_IOS_SURFACE_CREATE_INFO_MVK.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_IOS_SURFACE_CREATE_INFO_MVK.toString() + " has an unexpected value.");
        assertEquals(1000123000, VkStructureType.VK_STRUCTURE_TYPE_MACOS_SURFACE_CREATE_INFO_MVK.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_MACOS_SURFACE_CREATE_INFO_MVK.toString() + " has an unexpected value.");
        assertEquals(1000128000, VkStructureType.VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT.toString() + " has an unexpected value.");
        assertEquals(1000128001, VkStructureType.VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_TAG_INFO_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_TAG_INFO_EXT.toString() + " has an unexpected value.");
        assertEquals(1000128002, VkStructureType.VK_STRUCTURE_TYPE_DEBUG_UTILS_LABEL_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_DEBUG_UTILS_LABEL_EXT.toString() + " has an unexpected value.");
        assertEquals(1000128003, VkStructureType.VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CALLBACK_DATA_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CALLBACK_DATA_EXT.toString() + " has an unexpected value.");
        assertEquals(1000128004, VkStructureType.VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT.toString() + " has an unexpected value.");
        assertEquals(1000129000, VkStructureType.VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_USAGE_ANDROID.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_USAGE_ANDROID.toString() + " has an unexpected value.");
        assertEquals(1000129001, VkStructureType.VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_PROPERTIES_ANDROID.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_PROPERTIES_ANDROID.toString() + " has an unexpected value.");
        assertEquals(1000129002, VkStructureType.VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_FORMAT_PROPERTIES_ANDROID.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_FORMAT_PROPERTIES_ANDROID.toString() + " has an unexpected value.");
        assertEquals(1000129003, VkStructureType.VK_STRUCTURE_TYPE_IMPORT_ANDROID_HARDWARE_BUFFER_INFO_ANDROID.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_IMPORT_ANDROID_HARDWARE_BUFFER_INFO_ANDROID.toString() + " has an unexpected value.");
        assertEquals(1000129004, VkStructureType.VK_STRUCTURE_TYPE_MEMORY_GET_ANDROID_HARDWARE_BUFFER_INFO_ANDROID.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_MEMORY_GET_ANDROID_HARDWARE_BUFFER_INFO_ANDROID.toString() + " has an unexpected value.");
        assertEquals(1000129005, VkStructureType.VK_STRUCTURE_TYPE_EXTERNAL_FORMAT_ANDROID.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_EXTERNAL_FORMAT_ANDROID.toString() + " has an unexpected value.");
        assertEquals(1000130000, VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES_EXT.toString() + " has an unexpected value.");
        assertEquals(1000130001, VkStructureType.VK_STRUCTURE_TYPE_SAMPLER_REDUCTION_MODE_CREATE_INFO_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_SAMPLER_REDUCTION_MODE_CREATE_INFO_EXT.toString() + " has an unexpected value.");
        assertEquals(1000138000, VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES_EXT.toString() + " has an unexpected value.");
        assertEquals(1000138001, VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES_EXT.toString() + " has an unexpected value.");
        assertEquals(1000138002, VkStructureType.VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK_EXT.toString() + " has an unexpected value.");
        assertEquals(1000138003, VkStructureType.VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO_EXT.toString() + " has an unexpected value.");
        assertEquals(1000143000, VkStructureType.VK_STRUCTURE_TYPE_SAMPLE_LOCATIONS_INFO_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_SAMPLE_LOCATIONS_INFO_EXT.toString() + " has an unexpected value.");
        assertEquals(1000143001, VkStructureType.VK_STRUCTURE_TYPE_RENDER_PASS_SAMPLE_LOCATIONS_BEGIN_INFO_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_RENDER_PASS_SAMPLE_LOCATIONS_BEGIN_INFO_EXT.toString() + " has an unexpected value.");
        assertEquals(1000143002, VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_SAMPLE_LOCATIONS_STATE_CREATE_INFO_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_SAMPLE_LOCATIONS_STATE_CREATE_INFO_EXT.toString() + " has an unexpected value.");
        assertEquals(1000143003, VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLE_LOCATIONS_PROPERTIES_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLE_LOCATIONS_PROPERTIES_EXT.toString() + " has an unexpected value.");
        assertEquals(1000143004, VkStructureType.VK_STRUCTURE_TYPE_MULTISAMPLE_PROPERTIES_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_MULTISAMPLE_PROPERTIES_EXT.toString() + " has an unexpected value.");
        assertEquals(1000147000, VkStructureType.VK_STRUCTURE_TYPE_IMAGE_FORMAT_LIST_CREATE_INFO_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_IMAGE_FORMAT_LIST_CREATE_INFO_KHR.toString() + " has an unexpected value.");
        assertEquals(1000148000, VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_FEATURES_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_FEATURES_EXT.toString() + " has an unexpected value.");
        assertEquals(1000148001, VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_PROPERTIES_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_PROPERTIES_EXT.toString() + " has an unexpected value.");
        assertEquals(1000148002, VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_ADVANCED_STATE_CREATE_INFO_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_ADVANCED_STATE_CREATE_INFO_EXT.toString() + " has an unexpected value.");
        assertEquals(1000149000, VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_TO_COLOR_STATE_CREATE_INFO_NV.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_TO_COLOR_STATE_CREATE_INFO_NV.toString() + " has an unexpected value.");
        assertEquals(1000152000, VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_MODULATION_STATE_CREATE_INFO_NV.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_MODULATION_STATE_CREATE_INFO_NV.toString() + " has an unexpected value.");
        assertEquals(1000158000, VkStructureType.VK_STRUCTURE_TYPE_DRM_FORMAT_MODIFIER_PROPERTIES_LIST_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_DRM_FORMAT_MODIFIER_PROPERTIES_LIST_EXT.toString() + " has an unexpected value.");
        assertEquals(1000158001, VkStructureType.VK_STRUCTURE_TYPE_DRM_FORMAT_MODIFIER_PROPERTIES_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_DRM_FORMAT_MODIFIER_PROPERTIES_EXT.toString() + " has an unexpected value.");
        assertEquals(1000158002, VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_DRM_FORMAT_MODIFIER_INFO_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_DRM_FORMAT_MODIFIER_INFO_EXT.toString() + " has an unexpected value.");
        assertEquals(1000158003, VkStructureType.VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_LIST_CREATE_INFO_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_LIST_CREATE_INFO_EXT.toString() + " has an unexpected value.");
        assertEquals(1000158004, VkStructureType.VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_EXPLICIT_CREATE_INFO_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_EXPLICIT_CREATE_INFO_EXT.toString() + " has an unexpected value.");
        assertEquals(1000158005, VkStructureType.VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_PROPERTIES_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_PROPERTIES_EXT.toString() + " has an unexpected value.");
        assertEquals(1000160000, VkStructureType.VK_STRUCTURE_TYPE_VALIDATION_CACHE_CREATE_INFO_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_VALIDATION_CACHE_CREATE_INFO_EXT.toString() + " has an unexpected value.");
        assertEquals(1000160001, VkStructureType.VK_STRUCTURE_TYPE_SHADER_MODULE_VALIDATION_CACHE_CREATE_INFO_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_SHADER_MODULE_VALIDATION_CACHE_CREATE_INFO_EXT.toString() + " has an unexpected value.");
        assertEquals(1000161000, VkStructureType.VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO_EXT.toString() + " has an unexpected value.");
        assertEquals(1000161001, VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES_EXT.toString() + " has an unexpected value.");
        assertEquals(1000161002, VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES_EXT.toString() + " has an unexpected value.");
        assertEquals(1000161003, VkStructureType.VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO_EXT.toString() + " has an unexpected value.");
        assertEquals(1000161004, VkStructureType.VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT_EXT.toString() + " has an unexpected value.");
        assertEquals(1000164000, VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SHADING_RATE_IMAGE_STATE_CREATE_INFO_NV.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SHADING_RATE_IMAGE_STATE_CREATE_INFO_NV.toString() + " has an unexpected value.");
        assertEquals(1000164001, VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_FEATURES_NV.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_FEATURES_NV.toString() + " has an unexpected value.");
        assertEquals(1000164002, VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_PROPERTIES_NV.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_PROPERTIES_NV.toString() + " has an unexpected value.");
        assertEquals(1000164005, VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_COARSE_SAMPLE_ORDER_STATE_CREATE_INFO_NV.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_COARSE_SAMPLE_ORDER_STATE_CREATE_INFO_NV.toString() + " has an unexpected value.");
        assertEquals(1000165000, VkStructureType.VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_CREATE_INFO_NV.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_CREATE_INFO_NV.toString() + " has an unexpected value.");
        assertEquals(1000165001, VkStructureType.VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CREATE_INFO_NV.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CREATE_INFO_NV.toString() + " has an unexpected value.");
        assertEquals(1000165003, VkStructureType.VK_STRUCTURE_TYPE_GEOMETRY_NV.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_GEOMETRY_NV.toString() + " has an unexpected value.");
        assertEquals(1000165004, VkStructureType.VK_STRUCTURE_TYPE_GEOMETRY_TRIANGLES_NV.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_GEOMETRY_TRIANGLES_NV.toString() + " has an unexpected value.");
        assertEquals(1000165005, VkStructureType.VK_STRUCTURE_TYPE_GEOMETRY_AABB_NV.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_GEOMETRY_AABB_NV.toString() + " has an unexpected value.");
        assertEquals(1000165006, VkStructureType.VK_STRUCTURE_TYPE_BIND_ACCELERATION_STRUCTURE_MEMORY_INFO_NV.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_BIND_ACCELERATION_STRUCTURE_MEMORY_INFO_NV.toString() + " has an unexpected value.");
        assertEquals(1000165007, VkStructureType.VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE_NV.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE_NV.toString() + " has an unexpected value.");
        assertEquals(1000165008, VkStructureType.VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_INFO_NV.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_INFO_NV.toString() + " has an unexpected value.");
        assertEquals(1000165009, VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PROPERTIES_NV.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PROPERTIES_NV.toString() + " has an unexpected value.");
        assertEquals(1000165011, VkStructureType.VK_STRUCTURE_TYPE_RAY_TRACING_SHADER_GROUP_CREATE_INFO_NV.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_RAY_TRACING_SHADER_GROUP_CREATE_INFO_NV.toString() + " has an unexpected value.");
        assertEquals(1000165012, VkStructureType.VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_INFO_NV.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_INFO_NV.toString() + " has an unexpected value.");
        assertEquals(1000166000, VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_REPRESENTATIVE_FRAGMENT_TEST_FEATURES_NV.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_REPRESENTATIVE_FRAGMENT_TEST_FEATURES_NV.toString() + " has an unexpected value.");
        assertEquals(1000166001, VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_REPRESENTATIVE_FRAGMENT_TEST_STATE_CREATE_INFO_NV.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_REPRESENTATIVE_FRAGMENT_TEST_STATE_CREATE_INFO_NV.toString() + " has an unexpected value.");
        assertEquals(1000170000, VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_VIEW_IMAGE_FORMAT_INFO_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_VIEW_IMAGE_FORMAT_INFO_EXT.toString() + " has an unexpected value.");
        assertEquals(1000170001, VkStructureType.VK_STRUCTURE_TYPE_FILTER_CUBIC_IMAGE_VIEW_IMAGE_FORMAT_PROPERTIES_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_FILTER_CUBIC_IMAGE_VIEW_IMAGE_FORMAT_PROPERTIES_EXT.toString() + " has an unexpected value.");
        assertEquals(1000174000, VkStructureType.VK_STRUCTURE_TYPE_DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO_EXT.toString() + " has an unexpected value.");
        assertEquals(1000177000, VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES_KHR.toString() + " has an unexpected value.");
        assertEquals(1000178000, VkStructureType.VK_STRUCTURE_TYPE_IMPORT_MEMORY_HOST_POINTER_INFO_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_IMPORT_MEMORY_HOST_POINTER_INFO_EXT.toString() + " has an unexpected value.");
        assertEquals(1000178001, VkStructureType.VK_STRUCTURE_TYPE_MEMORY_HOST_POINTER_PROPERTIES_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_MEMORY_HOST_POINTER_PROPERTIES_EXT.toString() + " has an unexpected value.");
        assertEquals(1000178002, VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_HOST_PROPERTIES_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_HOST_PROPERTIES_EXT.toString() + " has an unexpected value.");
        assertEquals(1000180000, VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES_KHR.toString() + " has an unexpected value.");
        assertEquals(1000184000, VkStructureType.VK_STRUCTURE_TYPE_CALIBRATED_TIMESTAMP_INFO_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_CALIBRATED_TIMESTAMP_INFO_EXT.toString() + " has an unexpected value.");
        assertEquals(1000185000, VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_AMD.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_AMD.toString() + " has an unexpected value.");
        assertEquals(1000189000, VkStructureType.VK_STRUCTURE_TYPE_DEVICE_MEMORY_OVERALLOCATION_CREATE_INFO_AMD.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_DEVICE_MEMORY_OVERALLOCATION_CREATE_INFO_AMD.toString() + " has an unexpected value.");
        assertEquals(1000190000, VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_PROPERTIES_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_PROPERTIES_EXT.toString() + " has an unexpected value.");
        assertEquals(1000190001, VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_DIVISOR_STATE_CREATE_INFO_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_DIVISOR_STATE_CREATE_INFO_EXT.toString() + " has an unexpected value.");
        assertEquals(1000190002, VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_FEATURES_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_FEATURES_EXT.toString() + " has an unexpected value.");
        assertEquals(1000196000, VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRIVER_PROPERTIES_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRIVER_PROPERTIES_KHR.toString() + " has an unexpected value.");
        assertEquals(1000197000, VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES_KHR.toString() + " has an unexpected value.");
        assertEquals(1000199000, VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES_KHR.toString() + " has an unexpected value.");
        assertEquals(1000199001, VkStructureType.VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE_KHR.toString() + " has an unexpected value.");
        assertEquals(1000201000, VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COMPUTE_SHADER_DERIVATIVES_FEATURES_NV.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COMPUTE_SHADER_DERIVATIVES_FEATURES_NV.toString() + " has an unexpected value.");
        assertEquals(1000202000, VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_FEATURES_NV.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_FEATURES_NV.toString() + " has an unexpected value.");
        assertEquals(1000202001, VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_PROPERTIES_NV.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_PROPERTIES_NV.toString() + " has an unexpected value.");
        assertEquals(1000203000, VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_FEATURES_NV.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_FEATURES_NV.toString() + " has an unexpected value.");
        assertEquals(1000204000, VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_IMAGE_FOOTPRINT_FEATURES_NV.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_IMAGE_FOOTPRINT_FEATURES_NV.toString() + " has an unexpected value.");
        assertEquals(1000205000, VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_EXCLUSIVE_SCISSOR_STATE_CREATE_INFO_NV.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_EXCLUSIVE_SCISSOR_STATE_CREATE_INFO_NV.toString() + " has an unexpected value.");
        assertEquals(1000205002, VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXCLUSIVE_SCISSOR_FEATURES_NV.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXCLUSIVE_SCISSOR_FEATURES_NV.toString() + " has an unexpected value.");
        assertEquals(1000206000, VkStructureType.VK_STRUCTURE_TYPE_CHECKPOINT_DATA_NV.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_CHECKPOINT_DATA_NV.toString() + " has an unexpected value.");
        assertEquals(1000206001, VkStructureType.VK_STRUCTURE_TYPE_QUEUE_FAMILY_CHECKPOINT_PROPERTIES_NV.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_QUEUE_FAMILY_CHECKPOINT_PROPERTIES_NV.toString() + " has an unexpected value.");
        assertEquals(1000211000, VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES_KHR.toString() + " has an unexpected value.");
        assertEquals(1000212000, VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PCI_BUS_INFO_PROPERTIES_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PCI_BUS_INFO_PROPERTIES_EXT.toString() + " has an unexpected value.");
        assertEquals(1000214000, VkStructureType.VK_STRUCTURE_TYPE_IMAGEPIPE_SURFACE_CREATE_INFO_FUCHSIA.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_IMAGEPIPE_SURFACE_CREATE_INFO_FUCHSIA.toString() + " has an unexpected value.");
        assertEquals(1000218000, VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_FEATURES_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_FEATURES_EXT.toString() + " has an unexpected value.");
        assertEquals(1000218001, VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_PROPERTIES_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_PROPERTIES_EXT.toString() + " has an unexpected value.");
        assertEquals(1000218002, VkStructureType.VK_STRUCTURE_TYPE_RENDER_PASS_FRAGMENT_DENSITY_MAP_CREATE_INFO_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_RENDER_PASS_FRAGMENT_DENSITY_MAP_CREATE_INFO_EXT.toString() + " has an unexpected value.");
        assertEquals(1000221000, VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES_EXT.toString() + " has an unexpected value.");
        assertEquals(1000237000, VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_BUDGET_PROPERTIES_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_BUDGET_PROPERTIES_EXT.toString() + " has an unexpected value.");
        assertEquals(1000238000, VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PRIORITY_FEATURES_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PRIORITY_FEATURES_EXT.toString() + " has an unexpected value.");
        assertEquals(1000238001, VkStructureType.VK_STRUCTURE_TYPE_MEMORY_PRIORITY_ALLOCATE_INFO_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_MEMORY_PRIORITY_ALLOCATE_INFO_EXT.toString() + " has an unexpected value.");
        assertEquals(1000240000, VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEDICATED_ALLOCATION_IMAGE_ALIASING_FEATURES_NV.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEDICATED_ALLOCATION_IMAGE_ALIASING_FEATURES_NV.toString() + " has an unexpected value.");
        assertEquals(1000244000, VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES_EXT.toString() + " has an unexpected value.");
        assertEquals(1000244001, VkStructureType.VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO_EXT.toString() + " has an unexpected value.");
        assertEquals(1000244002, VkStructureType.VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_CREATE_INFO_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_CREATE_INFO_EXT.toString() + " has an unexpected value.");
        assertEquals(1000246000, VkStructureType.VK_STRUCTURE_TYPE_IMAGE_STENCIL_USAGE_CREATE_INFO_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_IMAGE_STENCIL_USAGE_CREATE_INFO_EXT.toString() + " has an unexpected value.");
        assertEquals(1000247000, VkStructureType.VK_STRUCTURE_TYPE_VALIDATION_FEATURES_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_VALIDATION_FEATURES_EXT.toString() + " has an unexpected value.");
        assertEquals(1000249000, VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_FEATURES_NV.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_FEATURES_NV.toString() + " has an unexpected value.");
        assertEquals(1000249001, VkStructureType.VK_STRUCTURE_TYPE_COOPERATIVE_MATRIX_PROPERTIES_NV.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_COOPERATIVE_MATRIX_PROPERTIES_NV.toString() + " has an unexpected value.");
        assertEquals(1000249002, VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_PROPERTIES_NV.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_PROPERTIES_NV.toString() + " has an unexpected value.");
        assertEquals(VkStructureType.VK_STRUCTURE_TYPE_DEBUG_REPORT_CALLBACK_CREATE_INFO_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_DEBUG_REPORT_CREATE_INFO_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_DEBUG_REPORT_CREATE_INFO_EXT.toString() + " has an unexpected value.");
        assertEquals(VkStructureType.VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO_KHR.toString() + " has an unexpected value.");
        assertEquals(VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES_KHR.toString() + " has an unexpected value.");
        assertEquals(VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES_KHR.toString() + " has an unexpected value.");
        assertEquals(VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2_KHR.toString() + " has an unexpected value.");
        assertEquals(VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2_KHR.toString() + " has an unexpected value.");
        assertEquals(VkStructureType.VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2_KHR.toString() + " has an unexpected value.");
        assertEquals(VkStructureType.VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2_KHR.toString() + " has an unexpected value.");
        assertEquals(VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2_KHR.toString() + " has an unexpected value.");
        assertEquals(VkStructureType.VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2_KHR.toString() + " has an unexpected value.");
        assertEquals(VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2_KHR.toString() + " has an unexpected value.");
        assertEquals(VkStructureType.VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2_KHR.toString() + " has an unexpected value.");
        assertEquals(VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2_KHR.toString() + " has an unexpected value.");
        assertEquals(VkStructureType.VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO_KHR.toString() + " has an unexpected value.");
        assertEquals(VkStructureType.VK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO_KHR.toString() + " has an unexpected value.");
        assertEquals(VkStructureType.VK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO_KHR.toString() + " has an unexpected value.");
        assertEquals(VkStructureType.VK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO_KHR.toString() + " has an unexpected value.");
        assertEquals(VkStructureType.VK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO_KHR.toString() + " has an unexpected value.");
        assertEquals(VkStructureType.VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO_KHR.toString() + " has an unexpected value.");
        assertEquals(VkStructureType.VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO_KHR.toString() + " has an unexpected value.");
        assertEquals(VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES_KHR.toString() + " has an unexpected value.");
        assertEquals(VkStructureType.VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO_KHR.toString() + " has an unexpected value.");
        assertEquals(VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO_KHR.toString() + " has an unexpected value.");
        assertEquals(VkStructureType.VK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES_KHR.toString() + " has an unexpected value.");
        assertEquals(VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO_KHR.toString() + " has an unexpected value.");
        assertEquals(VkStructureType.VK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES_KHR.toString() + " has an unexpected value.");
        assertEquals(VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES_KHR.toString() + " has an unexpected value.");
        assertEquals(VkStructureType.VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO_KHR.toString() + " has an unexpected value.");
        assertEquals(VkStructureType.VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO_KHR.toString() + " has an unexpected value.");
        assertEquals(VkStructureType.VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO_KHR.toString() + " has an unexpected value.");
        assertEquals(VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO_KHR.toString() + " has an unexpected value.");
        assertEquals(VkStructureType.VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES_KHR.toString() + " has an unexpected value.");
        assertEquals(VkStructureType.VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO_KHR.toString() + " has an unexpected value.");
        assertEquals(VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES_KHR.toString() + " has an unexpected value.");
        assertEquals(VkStructureType.VK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO_KHR.toString() + " has an unexpected value.");
        assertEquals(VkStructureType.VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES2_EXT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES2_EXT.toString() + " has an unexpected value.");
        assertEquals(VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO_KHR.toString() + " has an unexpected value.");
        assertEquals(VkStructureType.VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES_KHR.toString() + " has an unexpected value.");
        assertEquals(VkStructureType.VK_STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO_KHR.toString() + " has an unexpected value.");
        assertEquals(VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES_KHR.toString() + " has an unexpected value.");
        assertEquals(VkStructureType.VK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO_KHR.toString() + " has an unexpected value.");
        assertEquals(VkStructureType.VK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO_KHR.toString() + " has an unexpected value.");
        assertEquals(VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO_KHR.toString() + " has an unexpected value.");
        assertEquals(VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTER_FEATURES.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTER_FEATURES_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTER_FEATURES_KHR.toString() + " has an unexpected value.");
        assertEquals(VkStructureType.VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS_KHR.toString() + " has an unexpected value.");
        assertEquals(VkStructureType.VK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO_KHR.toString() + " has an unexpected value.");
        assertEquals(VkStructureType.VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2_KHR.toString() + " has an unexpected value.");
        assertEquals(VkStructureType.VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2_KHR.toString() + " has an unexpected value.");
        assertEquals(VkStructureType.VK_STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2_KHR.toString() + " has an unexpected value.");
        assertEquals(VkStructureType.VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2_KHR.toString() + " has an unexpected value.");
        assertEquals(VkStructureType.VK_STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2_KHR.toString() + " has an unexpected value.");
        assertEquals(VkStructureType.VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO_KHR.toString() + " has an unexpected value.");
        assertEquals(VkStructureType.VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO_KHR.toString() + " has an unexpected value.");
        assertEquals(VkStructureType.VK_STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO_KHR.toString() + " has an unexpected value.");
        assertEquals(VkStructureType.VK_STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO_KHR.toString() + " has an unexpected value.");
        assertEquals(VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES_KHR.toString() + " has an unexpected value.");
        assertEquals(VkStructureType.VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES_KHR.toString() + " has an unexpected value.");
        assertEquals(VkStructureType.VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO_KHR.toString() + " has an unexpected value.");
        assertEquals(VkStructureType.VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO_KHR.toString() + " has an unexpected value.");
        assertEquals(VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES_KHR.toString() + " has an unexpected value.");
        assertEquals(VkStructureType.VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT_KHR.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT_KHR.toString() + " has an unexpected value.");
        assertEquals(VkStructureType.VK_STRUCTURE_TYPE_APPLICATION_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_BEGIN_RANGE.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_BEGIN_RANGE.toString() + " has an unexpected value.");
        assertEquals(VkStructureType.VK_STRUCTURE_TYPE_LOADER_DEVICE_CREATE_INFO.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_END_RANGE.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_END_RANGE.toString() + " has an unexpected value.");
        assertEquals((VkStructureType.VK_STRUCTURE_TYPE_LOADER_DEVICE_CREATE_INFO.valueOf() - VkStructureType.VK_STRUCTURE_TYPE_APPLICATION_INFO .valueOf()+ 1), VkStructureType.VK_STRUCTURE_TYPE_RANGE_SIZE.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_RANGE_SIZE.toString() + " has an unexpected value.");
        assertEquals(0x7FFFFFFF, VkStructureType.VK_STRUCTURE_TYPE_MAX_ENUM.valueOf(), VkStructureType.VK_STRUCTURE_TYPE_MAX_ENUM.toString() + " has an unexpected value.");
    }
}
